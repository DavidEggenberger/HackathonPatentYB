@page "/"
@inject NavigationManager NavigationManager
@inject IAccessTokenProvider tokenProvider
@inject HttpClient httpClient

<CascadingValue Value="marketHubConnection" Name="MarketHubConnection">
    <AuthorizeView>
        <NotAuthorized>
            <h1>Please Login</h1>
        </NotAuthorized>
        <Authorized>
            <MarketplaceComponent />
        </Authorized>
    </AuthorizeView>
</CascadingValue>


@code{
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }
    private HubConnection marketHubConnection;

    protected override async Task OnInitializedAsync()
    {
        ClaimsPrincipal cp;
        if ((cp = (await AuthState).User).Identity.IsAuthenticated)
        {
            AccessToken token = new AccessToken();

            (await tokenProvider.RequestAccessToken()).TryGetToken(out token);

            if (token is not null)
            {
                marketHubConnection = new HubConnectionBuilder()
                .WithUrl(NavigationManager.ToAbsoluteUri("/markethub"), options =>
                {
                    options.AccessTokenProvider = async () => token.Value;
                })
                .Build();
                await marketHubConnection.StartAsync();
            }
        }
    }
}

